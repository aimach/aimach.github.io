const translation = {
  en: {
    title: "Request builder",
    subtitle:
      "A tool to assist you in understanding HTTP requests and the Express API",
    intro:
      "Welcome to Request Builder, a tool to assist you in constructing your HTTP requests and gaining a better understanding of their structure in ExpressJS. First, fill out the form below, then explore your request and its associated elements.",
    clear: "Clear",
    add: "Add",
    host: "Host",
    port: "Port",
    method: "Method",
    endpoint: "Endpoint",
    body: "Body",
    params: "Params",
    query: "Query",
    key: "key",
    value: "value",
    client: "Client",
    server: "Server",
    clientIntro: "The request you send with fetch, axios or Postman",
    clientTitle: "req.body you must send",
    noBody: "No body in get method",
    serverIntro:
      "The route you have in your router and the params and query objects of your request",
    backParams: "req.params you get",
    backQuery: "req.query you get",
    close: "Close",
    made: "Made with ❤️ by",
    for: "for",
    errorSpecialChar: "Some special characters are not accepted",
    errorNum: "Only numeric characters are accepted",
    errorMethod: "Only GET, POST, PUT et DELETE methods",
    next: "Next",
    previous: "Previous",
    here: "here",
    and: "and",
  },
  fr: {
    title: "Request builder",
    subtitle:
      "Un outil pour t'aider à comprendre les requêtes http et l'API d'Express",
    intro:
      "Bienvenue sur Request builder, un outil pour t'aider à construire tes requêtes HTTP et à mieux comprendre leur structure dans ExpressJS. Tout d'abord, remplis le formulaire ci-dessous puis découvre ta requête et les éléments associés.",
    clear: "Effacer",
    add: "Ajouter",
    host: "Host",
    port: "Port",
    method: "Méthode",
    endpoint: "Point d'accès",
    body: "Body",
    params: "Params",
    query: "Query",
    key: "clé",
    value: "valeur",
    client: "Client",
    server: "Serveur",
    clientIntro: "La requête que tu envoies avec fetch, axios ou Postman",
    frontFirstTitle: "Méthode et URL",
    clientTitle: "req.body que tu dois envoyer",
    noBody: "Pas de body avec la méthode GET",
    serverIntro:
      "La route que tu as dans ton router et les objets params et query de ta requête",
    backFirstTitle: "Méthode et route",
    backParams: "req.params que tu reçois",
    backQuery: "req.query que tu reçois",
    close: "Fermer",
    made: "Made with ❤️ par",
    for: "pour",
    errorSpecialChar: "Certains caractères spéciaux ne sont pas acceptés",
    errorNum: "Seuls les caractères numériques sont acceptés",
    errorMethod: "Uniquement les méthodes GET, POST, PUT et DELETE",
    next: "Suivant",
    previous: "Précédent",
    here: "ici",
    and: "et",
  },
};

export default translation;
